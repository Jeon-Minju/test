{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport 'date-fns';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/HighlightOff';\nimport Hidden from '@material-ui/core/Hidden';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    tablecontainer: {\n      width: '100%'\n    },\n    wrapper: {\n      overflow: \"auto\"\n    },\n    table: {\n      minWidth: 750\n    },\n    tableText: _defineProperty({}, theme.breakpoints.down(\"sm\"), {\n      fontSize: \"0.875rem\"\n    }),\n    button: _defineProperty({\n      color: \"#434f5b\",\n      cursor: \"pointer\"\n    }, theme.breakpoints.down(\"sm\"), {\n      fontSize: \"0.875rem\"\n    }),\n    iconButton: _defineProperty({\n      cursor: \"pointer\"\n    }, theme.breakpoints.down(\"sm\"), {\n      fontSize: \"0.875rem\"\n    })\n  };\n});\n\nfunction createData(number, name, information, price) {\n  return {\n    number: number,\n    name: name,\n    information: information,\n    price: price\n  };\n}\n\nvar rows = [createData(1, '마카롱', '작고 맛있어요', '10000원'), createData(2, '아메리카노', '쓰지만 맛있어요', '4500원'), createData(3, '카페라떼', '달아요', '5000원'), createData(4, '마카롱', '작고 맛있어요', '10000원'), createData(5, '마카롱', '작고 맛있어요', '10000원'), createData(6, '아메리카노', '쓰지만 맛있어요', '4500원'), createData(7, '카페라떼', '달아요', '5000원'), createData(8, '마카롱', '작고 맛있어요', '10000원'), createData(9, '마카롱', '작고 맛있어요', '10000원'), createData(10, '아메리카노', '쓰지만 맛있어요', '4500원'), createData(11, '카페라떼', '달아요', '5000원'), createData(12, '마카롱', '작고 맛있어요', '10000원')];\nexport default function AddMenuTable() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(5),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rowsPerPage = _React$useState4[0],\n      setRowsPerPage = _React$useState4[1];\n\n  var emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(_parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  function handleDateChange(date) {\n    setSelectedDate(date);\n  }\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: classes.tablecontainer\n  }, React.createElement(\"div\", {\n    className: classes.wrapper\n  }, React.createElement(Table, {\n    size: \"small\",\n    className: classes.table\n  }, React.createElement(TableHead, null, React.createElement(TableRow, null, React.createElement(TableCell, {\n    align: \"center\",\n    className: classes.tableText\n  }), React.createElement(TableCell, {\n    align: \"center\",\n    className: classes.tableText\n  }, \"\\uBA54\\uB274\\uC774\\uB984\"), React.createElement(TableCell, {\n    align: \"center\",\n    className: classes.tableText\n  }, \"\\uC124\\uBA85\"), React.createElement(TableCell, {\n    align: \"center\",\n    className: classes.tableText\n  }, \"\\uAC00\\uACA9\"), React.createElement(TableCell, {\n    align: \"center\",\n    className: classes.tableText,\n    padding: \"checkbox\"\n  }, \"\\uC0AC\\uC9C4\"), React.createElement(TableCell, {\n    align: \"center\",\n    className: classes.tableText,\n    padding: \"checkbox\"\n  }))), React.createElement(TableBody, null, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (row) {\n    return React.createElement(TableRow, {\n      key: row.number\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      align: \"center\",\n      className: classes.tableText,\n      padding: \"checkbox\"\n    }, React.createElement(IconButton, null, React.createElement(AddIcon, {\n      className: classes.iconButton\n    }))), React.createElement(TableCell, {\n      align: \"center\",\n      className: classes.tableText\n    }, row.name), React.createElement(TableCell, {\n      align: \"center\",\n      className: classes.tableText\n    }, row.information), React.createElement(TableCell, {\n      align: \"center\",\n      className: classes.tableText\n    }, row.price), React.createElement(TableCell, {\n      align: \"center\",\n      className: classes.tableText,\n      padding: \"checkbox\"\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      className: classes.button\n    }, \"\\uBCF4\\uAE30\")), React.createElement(TableCell, {\n      align: \"center\",\n      className: classes.tableText,\n      padding: \"checkbox\"\n    }, React.createElement(IconButton, null, React.createElement(DeleteIcon, {\n      className: classes.iconButton\n    }))));\n  })))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 20],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    labelRowsPerPage: \"\",\n    page: page,\n    backIconButtonProps: {\n      'aria-label': 'Previous Page'\n    },\n    nextIconButtonProps: {\n      'aria-label': 'Next Page'\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}