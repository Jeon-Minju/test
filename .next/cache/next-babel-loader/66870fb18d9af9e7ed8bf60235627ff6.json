{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport MaterialTable from 'material-table';\nexport default function AddMenuTable() {\n  var _React$useState = React.useState({\n    columns: [{\n      title: '메뉴이름',\n      field: 'name'\n    }, {\n      title: '설명',\n      field: 'detail'\n    }, {\n      title: '가격',\n      field: 'cost',\n      type: 'numeric'\n    }, {\n      title: '사진',\n      field: 'photo'\n    }],\n    data: [{\n      name: '아메리카노',\n      detail: '쓰고 맛있어요',\n      cost: 4500,\n      photo: 1\n    }, {\n      name: '아메리카노',\n      detail: '쓰고 맛있어요',\n      cost: 4500,\n      photo: 1\n    }, {\n      name: '아메리카노',\n      detail: '쓰고 맛있어요',\n      cost: 4500,\n      photo: 1\n    }, {\n      name: '아메리카노',\n      detail: '쓰고 맛있어요',\n      cost: 4500,\n      photo: 1\n    }, {\n      name: '아메리카노',\n      detail: '쓰고 맛있어요',\n      cost: 4500,\n      photo: 1\n    }, {\n      name: '아메리카노',\n      detail: '쓰고 맛있어요',\n      cost: 4500,\n      photo: 1\n    }, {\n      name: '아메리카노',\n      detail: '쓰고 맛있어요',\n      cost: 4500,\n      photo: 1\n    }, {\n      name: '아메리카노',\n      detail: '쓰고 맛있어요',\n      cost: 4500,\n      photo: 1\n    }, {\n      name: '아메리카노',\n      detail: '쓰고 맛있어요',\n      cost: 4500,\n      photo: 1\n    }]\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  return React.createElement(MaterialTable, {\n    title: \"addMenuTable\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: function onRowAdd(newData) {\n        return new _Promise(function (resolve) {\n          setTimeout(function () {\n            resolve();\n\n            var data = _toConsumableArray(state.data);\n\n            data.push(newData);\n            setState(_objectSpread({}, state, {\n              data: data\n            }));\n          }, 600);\n        });\n      },\n      onRowUpdate: function onRowUpdate(newData, oldData) {\n        return new _Promise(function (resolve) {\n          setTimeout(function () {\n            resolve();\n\n            var data = _toConsumableArray(state.data);\n\n            data[data.indexOf(oldData)] = newData;\n            setState(_objectSpread({}, state, {\n              data: data\n            }));\n          }, 600);\n        });\n      },\n      onRowDelete: function onRowDelete(oldData) {\n        return new _Promise(function (resolve) {\n          setTimeout(function () {\n            resolve();\n\n            var data = _toConsumableArray(state.data);\n\n            data.splice(data.indexOf(oldData), 1);\n            setState(_objectSpread({}, state, {\n              data: data\n            }));\n          }, 600);\n        });\n      }\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}