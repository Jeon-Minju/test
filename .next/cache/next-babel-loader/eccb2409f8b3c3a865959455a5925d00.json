{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ExitIcon from '@material-ui/icons/ExitToApp';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    wrapper: {\n      marginLeft: \"auto\"\n    }\n  };\n});\nexport default function SplitButton() {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var anchorRef = React.useRef(null);\n\n  var _React$useState3 = React.useState(1),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedIndex = _React$useState4[0],\n      setSelectedIndex = _React$useState4[1];\n\n  function handleMenuItemClick(event, index) {\n    setSelectedIndex(index);\n    setOpen(false);\n  }\n\n  function handleToggle() {\n    setOpen(function (prevOpen) {\n      return !prevOpen;\n    });\n  }\n\n  function handleClose(event) {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.wrapper\n  }, React.createElement(Grid, {\n    container: true\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    align: \"center\"\n  }, React.createElement(ButtonGroup, {\n    variant: \"contained\",\n    color: \"inherit\",\n    ref: anchorRef,\n    \"aria-label\": \"Split button\"\n  }, React.createElement(Button, {\n    onClick: handleToggle\n  }, \"\\uC548\\uB155\\uD558\\uC138\\uC694, \", React.createElement(\"strong\", null, \"\\uC548\\uB2E4\\uD574\"), \"\\uB2D8\"), React.createElement(Button, {\n    color: \"inherit\",\n    variant: \"contained\",\n    size: \"small\",\n    \"aria-owns\": open ? 'menu-list-grow' : undefined,\n    \"aria-haspopup\": \"true\",\n    onClick: handleToggle\n  }, React.createElement(ArrowDownIcon, null))), React.createElement(Popper, {\n    open: open,\n    anchorEl: anchorRef.current,\n    transition: true,\n    disablePortal: true\n  }, function (_ref) {\n    var TransitionProps = _ref.TransitionProps,\n        placement = _ref.placement;\n    return React.createElement(Grow, _extends({}, TransitionProps, {\n      style: {\n        transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n      }\n    }), React.createElement(Paper, {\n      id: \"menu-list-grow\"\n    }, React.createElement(ClickAwayListener, {\n      onClickAway: handleClose\n    }, React.createElement(MenuList, null, React.createElement(MenuItem, {\n      selected: _this.state.selectedIndex,\n      onClick: _this.handleMenuItemClick\n    }, React.createElement(PersonIcon, null), \" \\uAC1C\\uC778\\uD398\\uC774\\uC9C0\"), React.createElement(MenuItem, {\n      selected: _this.state.selectedIndex,\n      onClick: _this.handleMenuItemClick\n    }, React.createElement(ExitIcon, null), \" \\uB85C\\uADF8\\uC544\\uC6C3\")))));\n  }))));\n}","map":null,"metadata":{},"sourceType":"module"}