{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Hidden from '@material-ui/core/Hidden';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport Card from '@material-ui/core/Card';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport { MuiThemeProvider, withStyles } from \"@material-ui/core/styles\";\nimport MenuBar from '../components/menubar';\nimport Chatbot from '../components/chatbot';\nimport HeadCard from '../components/card/headcard';\nimport SideCard from '../components/card/sidecard';\nimport theme from '../static/theme';\nimport '../static/style.scss';\nvar drawerWidth = 240;\n\nvar styles = function styles(theme) {\n  return {\n    root: _defineProperty({}, theme.breakpoints.up(\"md\"), {\n      display: \"flex\"\n    }),\n    toolbar: theme.mixins.toolbar,\n    content: {\n      color: \"#434f5b\",\n      backgroundColor: '#f9fafc',\n      height: '100vh',\n      flexGrow: 1,\n      paddingTop: theme.spacing(3)\n    },\n    flexGrid: {\n      display: \"flex\"\n    },\n    fab: {\n      backgroundColor: \"#297bff\",\n      position: \"fixed\",\n      right: \"20px\",\n      bottom: \"20px\"\n    }\n  };\n};\n\nvar Question =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Question, _React$Component);\n\n  function Question() {\n    _classCallCheck(this, Question);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Question).apply(this, arguments));\n  }\n\n  _createClass(Question, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          type = _this$props.type;\n      return React.createElement(MuiThemeProvider, {\n        theme: theme\n      }, React.createElement(\"div\", {\n        className: classes.root\n      }, React.createElement(CssBaseline, null), React.createElement(MenuBar, null), React.createElement(\"main\", {\n        className: classes.content\n      }, React.createElement(\"div\", {\n        className: classes.toolbar\n      }), React.createElement(Container, {\n        maxWidth: \"xl\"\n      }, React.createElement(HeadCard, null), React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        className: classes.flexGrid\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        md: 9\n      }, React.createElement(Chatbot, {\n        type: \"list03\"\n      })), React.createElement(Hidden, {\n        smDown: true\n      }, React.createElement(Grid, {\n        item: true,\n        md: 3\n      }, React.createElement(SideCard, null)))), React.createElement(Hidden, {\n        mdUp: true\n      }, React.createElement(Fab, {\n        color: \"primary\",\n        \"aria-label\": \"Add\",\n        className: classes.fab\n      }, React.createElement(AddIcon, null)))))));\n    }\n  }]);\n\n  return Question;\n}(React.Component);\n\nexport default withStyles(styles)(Question);","map":null,"metadata":{},"sourceType":"module"}