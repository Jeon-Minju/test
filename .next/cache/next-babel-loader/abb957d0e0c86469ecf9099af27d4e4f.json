{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport Message from './message';\nimport moment from 'moment';\nimport '../../static/style.scss';\nvar MY_USER_ID = '마카롱';\n\nvar MessageList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MessageList, _Component);\n\n  function MessageList(props) {\n    var _this;\n\n    _classCallCheck(this, MessageList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessageList).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getMessages\", function () {\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          messages: [{\n            id: 1,\n            author: '마카롱',\n            message: '문의사항 있으신가요?',\n            timestamp: new Date().getTime()\n          }, {\n            id: 2,\n            author: '고객',\n            message: '기타 문의사항',\n            timestamp: new Date().getTime()\n          }, {\n            id: 3,\n            author: '마카롱',\n            message: '기타 문의 사항을 적어주세요',\n            timestamp: new Date().getTime()\n          }, {\n            id: 4,\n            author: '고객',\n            message: '안녕하세요. 사장님! 마카롱을 전자렌지에 돌려먹어도 괜찮은가요?',\n            timestamp: new Date().getTime()\n          }]\n        });\n      });\n    });\n\n    _this.state = {\n      messages: []\n    };\n    return _this;\n  }\n\n  _createClass(MessageList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getMessages();\n    }\n  }, {\n    key: \"renderMessages\",\n    value: function renderMessages() {\n      var i = 0;\n      var messageCount = this.state.messages.length;\n      var messages = [];\n\n      while (i < messageCount) {\n        var previous = this.state.messages[i - 1];\n        var current = this.state.messages[i];\n        var next = this.state.messages[i + 1];\n        var isMine = current.author === MY_USER_ID;\n        var currentMoment = moment(current.timestamp);\n        var prevBySameAuthor = false;\n        var nextBySameAuthor = false;\n        var startsSequence = true;\n        var endsSequence = true;\n        var showTimestamp = true;\n\n        if (previous) {\n          var previousMoment = moment(previous.timestamp);\n          var previousDuration = moment.duration(currentMoment.diff(previousMoment));\n          prevBySameAuthor = previous.author === current.author;\n\n          if (prevBySameAuthor && previousDuration.as('hours') < 1) {\n            startsSequence = false;\n          }\n\n          if (previousDuration.as('hours') < 1) {\n            showTimestamp = false;\n          }\n        }\n\n        if (next) {\n          var nextMoment = moment(next.timestamp);\n          var nextDuration = moment.duration(nextMoment.diff(currentMoment));\n          nextBySameAuthor = next.author === current.author;\n\n          if (nextBySameAuthor && nextDuration.as('hours') < 1) {\n            endsSequence = false;\n          }\n        }\n\n        messages.push(React.createElement(Message, {\n          key: i,\n          isMine: isMine,\n          startsSequence: startsSequence,\n          endsSequence: endsSequence,\n          showTimestamp: showTimestamp,\n          data: current\n        })); // Proceed to the next message.\n\n        i += 1;\n      }\n\n      return messages;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"messenger\"\n      }, React.createElement(\"div\", {\n        className: \"scrollable content\"\n      }, React.createElement(\"div\", {\n        className: \"message-list\"\n      }, React.createElement(\"div\", {\n        className: \"message-list-container\"\n      }, this.renderMessages()), React.createElement(\"div\", {\n        className: \"compose\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"compose-input\",\n        placeholder: \"\\uC774\\uACF3\\uC5D0 \\uBA54\\uC138\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n      }), React.createElement(\"button\", {\n        className: \"toolbar-button\"\n      }, React.createElement(AddIcon, null))))));\n    }\n  }]);\n\n  return MessageList;\n}(Component);\n\nexport { MessageList as default };","map":null,"metadata":{},"sourceType":"module"}